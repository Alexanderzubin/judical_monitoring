from app.bot.keyboards import generate_unsubscribe_buttons, main_menu


def unsubscribe(bot, repos, logger):
	@bot.message_handler(func=lambda message: message.text == 'üóëÔ∏è –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –¥–µ–ª–∞')

	def unsubscribe_case(message):
		user = repos['user'].get_by_tg_id(message.chat.id)
		user_subscription = repos['subscription'].get_user_subscriptions(user.id)
		try:
			if not user_subscription:
				bot.send_message(message.chat.id, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫')
				return

			bot.send_message(message.chat.id,
							 '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–ª–æ, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è:',
							 reply_markup=generate_unsubscribe_buttons(user_subscription)
							 )

		except Exception as e:
			bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –¥–µ–ª')

	@bot.callback_query_handler(func=lambda call: call.data.startswith('unsubscribe_'))
	def unsubscribe_callback(call):
		subscription_id = int(call.data.split('_')[1])

		try:
			repos['subscription'].delete(subscription_id)
			bot.answer_callback_query(call.id, text='–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –¥–µ–ª–∞')
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
								  text='–ü–æ–¥–ø–∏—Å–∫–∞ —É–¥–∞–ª–µ–Ω–∞')

		except Exception as e:
			logger.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø–∏—Å–∫–µ {e}')
			bot.answer_callback_query(call.id, text='–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø–∏—Å–∫–µ')

	@bot.message_handler(func=lambda message: message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
	def back_to_main(message):
		bot.delete_message(message.chat.id, message.message_id)
		bot.send_message(message.chat.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())
