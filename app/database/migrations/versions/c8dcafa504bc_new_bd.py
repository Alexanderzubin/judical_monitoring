"""'new_bd'

Revision ID: c8dcafa504bc
Revises:
Create Date: 2025-05-02 15:56:07.329899

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c8dcafa504bc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'category',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment='идентификатор категории дела',
        ),
        sa.Column(
            'name',
            sa.String(length=1024),
            nullable=False,
            comment='наименование категории дела',
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_table(
        'court',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment='идентификатор судов',
        ),
        sa.Column('name', sa.String(length=255), nullable=False, comment='Наименование суда'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_table(
        'judge',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment='идентификатор судьи',
        ),
        sa.Column('name', sa.String(length=255), nullable=False, comment='ФИО судьи'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_table(
        'user',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment='идентификатор пользователя',
        ),
        sa.Column(
            'tg_id',
            sa.BigInteger(),
            nullable=False,
            comment='идентификатор пользователя в telegram',
        ),
        sa.Column(
            'first_name',
            sa.String(length=255),
            nullable=True,
            comment='имя пользователя',
        ),
        sa.Column(
            'last_name',
            sa.String(length=255),
            nullable=True,
            comment='фамилия пользователя',
        ),
        sa.Column(
            'username',
            sa.String(length=255),
            nullable=True,
            comment='логин пользователя в telegram',
        ),
        sa.Column(
            'chat_id',
            sa.BigInteger(),
            nullable=False,
            comment='идентификатор чата с пользователем',
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tg_id'),
    )
    op.create_table(
        'case',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment='идентификатор карточки дела',
        ),
        sa.Column('number', sa.String(length=255), nullable=False, comment='номер дела'),
        sa.Column(
            'unique_identifier',
            sa.String(length=255),
            nullable=False,
            comment='уникальный идентификатор дела',
        ),
        sa.Column('judge_id', sa.Integer(), nullable=False, comment='идентификатор судьи'),
        sa.Column('date_of_receipt', sa.Date(), nullable=False, comment='дата размещения'),
        sa.Column('url', sa.String(), nullable=False, comment='URL дела'),
        sa.Column('court_id', sa.Integer(), nullable=False, comment='идентификатор суда'),
        sa.ForeignKeyConstraint(['court_id'], ['court.id'], ondelete='RESTRICT'),
        sa.ForeignKeyConstraint(['judge_id'], ['judge.id'], ondelete='RESTRICT'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        sa.UniqueConstraint('unique_identifier'),
    )
    op.create_index(op.f('ix_case_court_id'), 'case', ['court_id'], unique=False)
    op.create_index(op.f('ix_case_judge_id'), 'case', ['judge_id'], unique=False)
    op.create_index(op.f('ix_case_url'), 'case', ['url'], unique=True)
    op.create_table(
        'case_category',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment='суррогатный ключ',
        ),
        sa.Column('category_id', sa.Integer(), nullable=False, comment='категория дела'),
        sa.Column(
            'case_id',
            sa.Integer(),
            nullable=False,
            comment='идентификатор карточки дела',
        ),
        sa.ForeignKeyConstraint(['case_id'], ['case.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['category_id'], ['category.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('category_id', 'case_id', name='uq_casecategory_case_category'),
        sa.UniqueConstraint('id'),
    )
    op.create_table(
        'case_event',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment='идентификатор события',
        ),
        sa.Column(
            'name',
            sa.String(length=255),
            nullable=False,
            comment='наименование события',
        ),
        sa.Column('date', sa.Date(), nullable=False, comment='дата события'),
        sa.Column('time', sa.Time(), nullable=False, comment='время события'),
        sa.Column('result', sa.String(length=255), nullable=True, comment='результат события'),
        sa.Column(
            'the_basic_for_the_selected_result',
            sa.String(length=255),
            nullable=True,
            comment='Основание для выбранного результата события',
        ),
        sa.Column(
            'date_of_placement',
            sa.Date(),
            nullable=False,
            comment='дата размещения события',
        ),
        sa.Column(
            'case_id',
            sa.Integer(),
            nullable=False,
            comment='идентификатор карточки дела',
        ),
        sa.ForeignKeyConstraint(['case_id'], ['case.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'subscription',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment='идентификатор подписки',
        ),
        sa.Column('user_id', sa.Integer(), nullable=False, comment='идентификатор пользователя'),
        sa.Column(
            'case_id',
            sa.Integer(),
            nullable=False,
            comment='идентификатор карточки дела',
        ),
        sa.ForeignKeyConstraint(['case_id'], ['case.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id', 'case_id', name='uq_subscription_user_case'),
    )
    op.create_table(
        'notification',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment='идентификатор уведомления',
        ),
        sa.Column('user_id', sa.Integer(), nullable=False, comment='идентификатор пользователя'),
        sa.Column('event_id', sa.Integer(), nullable=False, comment='идентификатор события'),
        sa.Column(
            'sent_at',
            sa.DateTime(),
            server_default=sa.text('now()'),
            nullable=True,
            comment='дата отправки уведомления пользователю',
        ),
        sa.ForeignKeyConstraint(['event_id'], ['case_event.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id', 'event_id', name='uq_user_event'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notification')
    op.drop_table('subscription')
    op.drop_table('case_event')
    op.drop_table('case_category')
    op.drop_index(op.f('ix_case_url'), table_name='case')
    op.drop_index(op.f('ix_case_judge_id'), table_name='case')
    op.drop_index(op.f('ix_case_court_id'), table_name='case')
    op.drop_table('case')
    op.drop_table('user')
    op.drop_table('judge')
    op.drop_table('court')
    op.drop_table('category')
    # ### end Alembic commands ###
